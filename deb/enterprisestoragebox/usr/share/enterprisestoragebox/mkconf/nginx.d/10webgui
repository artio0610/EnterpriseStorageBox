#!/bin/sh
#
# This file is part of EnterpriSestorageBox.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author   Artur Osinski-Stachowicz <artio0610@gmail.com>
# @copyright Copyright (c) 2009-2015 Artur Osinski-Stachowicz
#
# EnterpriSestorageBox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# EnterpriSestorageBox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EnterpriSestorageBox. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://wiki.nginx.org/Pitfalls#Taxing_Rewrites
# http://security.stackexchange.com/questions/54639/nginx-recommended-ssl-ciphers-for-security-compatibility-with-pfs
# http://en.wikipedia.org/wiki/List_of_HTTP_header_fields

set -e

. /etc/default/enterprisestoragebox
. /usr/share/enterprisestoragebox/scripts/helper-functions

ESB_SSL_CERTIFICATE_DIR=${ESB_SSL_CERTIFICATE_DIR:-"/etc/ssl"}
ESB_SSL_CERTIFICATE_PREFIX=${ESB_SSL_CERTIFICATE_PREFIX:-"enterprisestoragebox-"}

ESB_NGINX_SITE_WEBGUI_LOG_DIR=${ESB_NGINX_SITE_WEBGUI_LOG_DIR:-"/var/log/nginx"}
ESB_NGINX_SITE_WEBGUI_SERVERNAME=${ESB_NGINX_SITE_WEBGUI_SERVERNAME:-"enterprisestoragebox-webgui"}
ESB_NGINX_SITE_WEBGUI_CONFIG=${ESB_NGINX_SITE_WEBGUI_CONFIG:-"/etc/nginx/sites-available/enterprisestoragebox-webgui"}
ESB_NGINX_SITE_WEBGUI_INCLUDE_DIR=${ESB_NGINX_SITE_WEBGUI_INCLUDE_DIR:-"/etc/nginx/enterprisestoragebox-webgui.d"}
ESB_NGINX_SITE_WEBGUI_LOGLEVEL=${ESB_NGINX_SITE_WEBGUI_LOGLEVEL:-"error"}
ESB_NGINX_SITE_WEBGUI_CLIENT_MAX_BODY_SIZE=${ESB_NGINX_SITE_WEBGUI_CLIENT_MAX_BODY_SIZE:-"25M"}
ESB_NGINX_SITE_WEBGUI_SECURITY_CONFIG=${ESB_NGINX_SITE_WEBGUI_SECURITY_CONFIG:-"${ESB_NGINX_SITE_WEBGUI_INCLUDE_DIR}/security.conf"}
ESB_NGINX_SITE_WEBGUI_SECURITY_CSP_ENABLE=${ESB_NGINX_SITE_WEBGUI_SECURITY_CSP_ENABLE:-"yes"}
ESB_NGINX_SITE_WEBGUI_SECURITY_CSP=${ESB_NGINX_SITE_WEBGUI_SECURITY_CSP:-"default-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:;"}
ESB_NGINX_SITE_WEBGUI_SECURITY_XFRAMEOPTIONS_ENABLE=${ESB_NGINX_SITE_WEBGUI_SECURITY_XFRAMEOPTIONS_ENABLE:-"yes"}
ESB_NGINX_SITE_WEBGUI_SECURITY_XFRAMEOPTIONS=${ESB_NGINX_SITE_WEBGUI_SECURITY_XFRAMEOPTIONS:-"SAMEORIGIN"}
ESB_NGINX_SITE_WEBGUI_SECURITY_HSTS=${ESB_NGINX_SITE_WEBGUI_SECURITY_HSTS:-"max-age=15768000; includeSubdomains"}
ESB_NGINX_SITE_WEBGUI_FASTCGI_READ_TIMEOUT=${ESB_NGINX_SITE_WEBGUI_FASTCGI_READ_TIMEOUT:-"60s"}
ESB_NGINX_SITE_WEBGUI_SSL_PROTOCOLS=${ESB_NGINX_SITE_WEBGUI_SSL_PROTOCOLS:-"TLSv1.1 TLSv1.2"}
ESB_NGINX_SITE_WEBGUI_SSL_PREFER_SERVER_CIPHERS=${ESB_NGINX_SITE_WEBGUI_SSL_PREFER_SERVER_CIPHERS:-"on"}
ESB_NGINX_SITE_WEBGUI_SSL_CIPHERS=${ESB_NGINX_SITE_WEBGUI_SSL_CIPHERS:-"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK"}

# Check if IPv6 is enabled. Set enabled by default.
ipv6enabled=1
if ! esb_is_ipv6_enabled; then
	ipv6enabled=0
fi

# Create '/etc/nginx/sites-available/enterprisestoragebox-webgui' file
xmlstarlet sel -t -m "//webadmin" \
  -o "server {" -n \
  -o "    server_name ${ESB_NGINX_SITE_WEBGUI_SERVERNAME};" -n \
  -o "    root ${ESB_DOCUMENTROOT_DIR};" -n \
  -o "    index index.php;" -n \
  -o "    autoindex off;" -n \
  -o "    server_tokens off;" -n \
  -o "    sendfile on;" -n \
  -o "    large_client_header_buffers 4 32k;" -n \
  -o "    client_max_body_size ${ESB_NGINX_SITE_WEBGUI_CLIENT_MAX_BODY_SIZE};" -n \
  -o "    error_log ${ESB_NGINX_SITE_WEBGUI_LOG_DIR}/${ESB_NGINX_SITE_WEBGUI_SERVERNAME}_error.log ${ESB_NGINX_SITE_WEBGUI_LOGLEVEL};" -n \
  -o "    access_log ${ESB_NGINX_SITE_WEBGUI_LOG_DIR}/${ESB_NGINX_SITE_WEBGUI_SERVERNAME}_access.log combined;" -n \
  -o "    location /extjs/ {" -n \
  -o "        alias /usr/share/javascript/extjs5/;" -n \
  -o "    }" -n \
  -o "    location /images/ {" -n \
  -o "        alias ${ESB_DOCUMENTROOT_DIR}/images/;" -n \
  -o "    }" -n \
  -o "    location ~ \.php$ {" -n \
  -o "        try_files \$uri = 404;" -n \
  -o "        fastcgi_split_path_info ^(.+\.php)(/.+)$;" -n \
  -o "        fastcgi_pass unix:/var/run/php5-fpm-enterprisestoragebox-webgui.sock;" -n \
  -o "        fastcgi_index index.php;" -n \
  -o "        fastcgi_read_timeout ${ESB_NGINX_SITE_WEBGUI_FASTCGI_READ_TIMEOUT};" -n \
  -o "        include fastcgi_params;" -n \
  -o "    }" -n \
  -i "${ipv6enabled} = 0" \
    -v "concat('    listen ',port,' default_server;')" -n \
  -b \
  -i "${ipv6enabled} = 1" \
    -v "concat('    listen [::]:',port,' default_server ipv6only=off;')" -n \
  -b \
  -i "enablessl[. = '1'] and forcesslonly[. = '1']" \
    -o "    if (\$scheme = http) {" -n \
    -o "        # Force redirection to HTTPS." -n \
    -v "concat('        return 301 https://\$host:',sslport,'\$request_uri;')" -n \
    -o "    }" -n \
  -b \
  -i "enablessl[. = '1']" \
    -i "${ipv6enabled} = 0" \
      -v "concat('    listen ',sslport,' default_server ssl deferred;')" -n \
    -b \
    -i "${ipv6enabled} = 1" \
      -v "concat('    listen [::]:',sslport,' default_server ipv6only=off ssl deferred;')" -n \
    -b \
    -v "concat('    ssl_certificate ${ESB_SSL_CERTIFICATE_DIR}/certs/${ESB_SSL_CERTIFICATE_PREFIX}',sslcertificateref,'.crt;')" -n \
    -v "concat('    ssl_certificate_key ${ESB_SSL_CERTIFICATE_DIR}/private/${ESB_SSL_CERTIFICATE_PREFIX}',sslcertificateref,'.key;')" -n \
  -b \
  -o "    include ${ESB_NGINX_SITE_WEBGUI_INCLUDE_DIR}/*.conf;" -n \
  -o "}" \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_NGINX_SITE_WEBGUI_CONFIG}

# Create '/etc/nginx/enterprisestoragebox-webgui.d/security.conf' file
xmlstarlet sel -t -m "//webadmin" \
  -i "enablessl[. = '1']" \
    -o "# PFS (Perfect Forward Secrecy)" -n \
	-o "# https://mozilla.github.io/server-side-tls/ssl-config-generator" -n \
    -o "ssl_protocols ${ESB_NGINX_SITE_WEBGUI_SSL_PROTOCOLS};" -n \
    -o "ssl_prefer_server_ciphers ${ESB_NGINX_SITE_WEBGUI_SSL_PREFER_SERVER_CIPHERS};" -n \
    -o "ssl_ciphers '${ESB_NGINX_SITE_WEBGUI_SSL_CIPHERS}';" -n \
  -b \
  -i "enablessl[. = '1'] and forcesslonly[. = '1']" \
    -n \
    -o "# HSTS (HTTP Strict Transport Security)" -n \
    -o "# https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security" -n \
    -o "# https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping" -n \
    -o "add_header Strict-Transport-Security \"${ESB_NGINX_SITE_WEBGUI_SECURITY_HSTS}\";" -n \
  -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_NGINX_SITE_WEBGUI_SECURITY_CONFIG}

if esb_checkyesno "${ESB_NGINX_SITE_WEBGUI_SECURITY_CSP_ENABLE}"; then
	cat <<EOF >> ${ESB_NGINX_SITE_WEBGUI_SECURITY_CONFIG}
# Content Security Policy (CSP)
# https://www.owasp.org/index.php/Content_Security_Policy
add_header Content-Security-Policy "${ESB_NGINX_SITE_WEBGUI_SECURITY_CSP}";

EOF
fi

if esb_checkyesno "${ESB_NGINX_SITE_WEBGUI_SECURITY_XFRAMEOPTIONS_ENABLE}"; then
	cat <<EOF >> ${ESB_NGINX_SITE_WEBGUI_SECURITY_CONFIG}
# https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options
add_header X-Frame-Options "${ESB_NGINX_SITE_WEBGUI_SECURITY_XFRAMEOPTIONS}";

EOF
fi

cat <<EOF >> ${ESB_NGINX_SITE_WEBGUI_SECURITY_CONFIG}
# http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx
add_header X-Content-Type-Options "nosniff";

# https://wiki.mozilla.org/Security/Features/XSS_Filter
# http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx
add_header X-XSS-Protection "1; mode=block";
EOF
