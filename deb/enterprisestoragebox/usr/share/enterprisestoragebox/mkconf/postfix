#!/bin/sh
#
# This file is part of EnterpriSestorageBox.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author   Artur Osinski-Stachowicz <artio0610@gmail.com>
# @copyright Copyright (c) 2009-2015 Artur Osinski-Stachowicz
#
# EnterpriSestorageBox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# EnterpriSestorageBox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EnterpriSestorageBox. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://www.postfix.org/postconf.5.html
# http://www.gtkdb.de/index_7_727.html
# http://irbs.net/internet/postfix/0503/2148.html
# http://gate.io/blogpost34
# http://www.cyberciti.biz/tips/howto-postfix-flush-mail-queue.html
# http://www.tuxfutter.de/wiki/Einrichten_eines_Mailservers_mit_Postfix

# Testing:
# echo "Test" | mail -s "Test subject" -a "From: xxx@yyy.zzz" root
# hostname | mailx -s "root `hostname` `date`" root
# mailq
# postcat -q A705238B4C

# Working with CA certificates:
# - Add new CA certificate to /etc/ssl/certs
# - Modify /etc/ca-certificates.conf
# - Execute update-ca-certificates

set -e

. /etc/default/enterprisestoragebox
. /usr/share/enterprisestoragebox/scripts/helper-functions

ESB_POSTFIX_CONFIG=${ESB_POSTFIX_CONFIG:-"/etc/postfix/main.cf"}
ESB_POSTFIX_MYDESTINATION=${ESB_POSTFIX_MYDESTINATION:-""}
ESB_POSTFIX_INET_INTERFACES=${ESB_POSTFIX_INET_INTERFACES:-"loopback-only"}
ESB_POSTFIX_SMTP_GENERIC_MAPS=${ESB_POSTFIX_SMTP_GENERIC_MAPS:-"/etc/postfix/generic"}
ESB_POSTFIX_SENDER_CANONICAL_MAPS=${ESB_POSTFIX_SENDER_CANONICAL_MAPS:-"/etc/postfix/sender_canonical"}
ESB_POSTFIX_RECIPIENT_BCC_MAPS=${ESB_POSTFIX_RECIPIENT_BCC_MAPS:-"/etc/postfix/recipient_bcc"}
ESB_POSTFIX_SMTP_SASL_AUTH_ENABLE=${ESB_POSTFIX_SMTP_SASL_AUTH_ENABLE:-"yes"}
ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS=${ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS:-"/etc/postfix/sasl_passwd"}
ESB_POSTFIX_SMTP_SASL_SECURITY_OPTIONS=${ESB_POSTFIX_INETINTERFACES:-"noanonymous"}
ESB_POSTFIX_SMTP_SASL_MECHANISM_FILTER=${ESB_POSTFIX_SMTP_SASL_MECHANISM_FILTER:-""}
ESB_POSTFIX_SMTP_HEADER_CHECKS=${ESB_POSTFIX_SMTP_HEADER_CHECKS:-"/etc/postfix/smtp_header_checks"}
ESB_POSTFIX_SMTP_TLS_SECURITY_LEVEL=${ESB_POSTFIX_SMTP_TLS_SECURITY_LEVEL:-"may"}
ESB_POSTFIX_SMTP_TLS_CAFILE=${ESB_POSTFIX_SMTP_TLS_CAFILE:-"/etc/ssl/certs/ca-certificates.crt"}
ESB_POSTFIX_SMTP_TLS_CAPATH=${ESB_POSTFIX_SMTP_TLS_CAPATH:-"/etc/ssl/certs"}
ESB_POSTFIX_CRON_CONFIG=${ESB_POSTFIX_CRON_CONFIG:-"/etc/cron.hourly/enterprisestoragebox-flushmailq"}

# Ensure various required directories exist.
[ ! -e "/var/spool/postfix/public/pickup" ] &&  mkfifo /var/spool/postfix/public/pickup

# Build the full qualified domain name based on the network configuration.
fqdn=$(xmlstarlet sel -t -m "//system/network" \
  -v "hostname" \
  -i "string-length(domainname) > 0" -v "concat('.',domainname)" \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc)

# Create '/etc/postfix/main.cf' configuration file
xmlstarlet sel -t -m "//system/email" \
  -o "mydestination = ${ESB_POSTFIX_MYDESTINATION}" -n \
  -o "inet_interfaces = ${ESB_POSTFIX_INET_INTERFACES}" -n \
  -v "concat('relayhost = ',server,':',port)" -n \
  -o "sender_canonical_maps = hash:${ESB_POSTFIX_SENDER_CANONICAL_MAPS}" -n \
  -o "recipient_bcc_maps = hash:${ESB_POSTFIX_RECIPIENT_BCC_MAPS}" -n \
  -o "smtp_generic_maps = hash:${ESB_POSTFIX_SMTP_GENERIC_MAPS}" -n \
  -i "authentication[enable = '1']" \
    -o "smtp_sasl_auth_enable = ${ESB_POSTFIX_SMTP_SASL_AUTH_ENABLE}" -n \
    -o "smtp_sasl_security_options = ${ESB_POSTFIX_SMTP_SASL_SECURITY_OPTIONS}" -n \
    -o "smtp_sasl_password_maps = hash:${ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS}" -n \
    -o "smtp_sasl_mechanism_filter = ${ESB_POSTFIX_SMTP_SASL_MECHANISM_FILTER}" -n \
  -b \
  -i "tls[. = '1']" \
    -o "smtp_tls_security_level = ${ESB_POSTFIX_SMTP_TLS_SECURITY_LEVEL}" -n \
    -o "smtp_tls_CAfile = ${ESB_POSTFIX_SMTP_TLS_CAFILE}" -n \
    -o "smtp_tls_CApath = ${ESB_POSTFIX_SMTP_TLS_CAPATH}" -n \
  -b \
  -o "smtp_header_checks = regexp:${ESB_POSTFIX_SMTP_HEADER_CHECKS}" -n \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_POSTFIX_CONFIG}

# Create '/etc/postfix/sasl_passwd' configuration file
xmlstarlet sel -t -m "//system/email" \
  -i "authentication[enable = '1']" \
    -v "concat(server,':',port,' ',authentication/username,':',authentication/password)" -n \
  -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS}
chown root:root ${ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS}
chmod 0600 ${ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS}
postmap ${ESB_POSTFIX_SMTP_SASL_PASSWORD_MAPS}

# Create '/etc/postfix/generic' configuration file. Add a catch-all recipient,
# thus all emails send to an user/address not existing will be redirected to
# the configured primary recipient address.
xmlstarlet sel -t \
  -i "//system/email/enable[. = '1']" \
	-v "concat('root ',//system/email/primaryemail)" -n \
	-v "concat('enterprisestoragebox ',//system/email/primaryemail)" -n \
	-m "//system/usermanagement/users/user[email != '']" \
	  -v "concat(name,' ',email)" -n \
	-b \
	-v "concat('@',//system/network/hostname,'.localdomain ',//system/email/primaryemail)" \
  -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_POSTFIX_SMTP_GENERIC_MAPS}
chown root:root ${ESB_POSTFIX_SMTP_GENERIC_MAPS}
chmod 0600 ${ESB_POSTFIX_SMTP_GENERIC_MAPS}
postmap ${ESB_POSTFIX_SMTP_GENERIC_MAPS}

# Create '/etc/postfix/sender_canonical' configuration file. Rewrite all
# outgoing emails with the configured sender address, otherwise the SMTP relay
# will bounce them, e.g.
# postfix/smtp[xxxxx]: XXXXXXXXXX: to=<abc@xyz.localdomain>,
#   orig_to=<test>, relay=mail.gmx.net[x.x.x.x]:25, delay=1,
#   delays=0.02/0.02/0.93/0.06, dsn=5.7.0, status=bounced (host
#   mail.gmx.net[x.x.x.x] said: 550 5.7.0 Sender address does not belong to
#   logged in user {mp030} (in reply to MAIL FROM command))
xmlstarlet sel -t \
  -i "//system/email/enable[. = '1']" \
	-v "concat('@',//system/network/hostname,'.localdomain ',//system/email/sender)" -n \
	-v "concat('\"\" ',//system/email/sender)" \
  -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_POSTFIX_SENDER_CANONICAL_MAPS}
chown root:root ${ESB_POSTFIX_SENDER_CANONICAL_MAPS}
chmod 0600 ${ESB_POSTFIX_SENDER_CANONICAL_MAPS}
postmap ${ESB_POSTFIX_SENDER_CANONICAL_MAPS}

# Create '/etc/postfix/recipient_bcc' configuration file
xmlstarlet sel -t -m "//system/email" \
  -i "enable[. = '1'] and string-length(secondaryemail) > 0" \
	  -v "concat(primaryemail,' ',secondaryemail)" \
  -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc > ${ESB_POSTFIX_RECIPIENT_BCC_MAPS}
chown root:root ${ESB_POSTFIX_RECIPIENT_BCC_MAPS}
chmod 0600 ${ESB_POSTFIX_RECIPIENT_BCC_MAPS}
postmap ${ESB_POSTFIX_RECIPIENT_BCC_MAPS}

# Create '/etc/postfix/smtp_header_checks' configuration file
cat <<EOF > ${ESB_POSTFIX_SMTP_HEADER_CHECKS}
# Append the hostname to the email subject
/^Subject: (.*)/ REPLACE Subject: \${1} [${fqdn}]
EOF
chown root:root ${ESB_POSTFIX_SMTP_HEADER_CHECKS}
chmod 0600 ${ESB_POSTFIX_SMTP_HEADER_CHECKS}

# Create a hourly cron job that flushes the postfix mail queue if email
# notification is disabled.
if [ "$(esb_config_get "//system/email/enable")" = "0" ]; then
	cat <<EOF > ${ESB_POSTFIX_CRON_CONFIG}
#!/bin/sh
# Flush the mail queue every hour if email notification is disabled.
postsuper -d ALL
EOF
	chmod 755 ${ESB_POSTFIX_CRON_CONFIG}
else
	rm -f ${ESB_POSTFIX_CRON_CONFIG}
fi
