#!/bin/sh
#
# This file is part of EnterpriSestorageBox.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author   Artur Osinski-Stachowicz <artio0610@gmail.com>
# @copyright Copyright (c) 2009-2015 Artur Osinski-Stachowicz
#
# EnterpriSestorageBox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# EnterpriSestorageBox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EnterpriSestorageBox. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://linuxwiki.de/OpenSSH
# https://help.ubuntu.com/community/SSH/OpenSSH/Configuring
# https://tools.ietf.org/html/rfc4716

# Converting SSH2 public key (OpenSSH -> RFC4716)
# ssh-keygen -e -f ~/.ssh/id_rsa.pub

set -e

. /etc/default/enterprisestoragebox
. /usr/share/enterprisestoragebox/scripts/helper-functions

ESB_SSHD_AUTHORIZEDKEYSFILE_DIR=${ESB_SSHD_AUTHORIZEDKEYSFILE_DIR:-"/var/lib/enterprisestoragebox/ssh/authorized_keys"}
ESB_SSHD_AUTHORIZEDKEYSFILE_MASK=${ESB_SSHD_AUTHORIZEDKEYSFILE_MASK:-"600"}

# Remove all existing authorized_keys files.
find "${ESB_SSHD_AUTHORIZEDKEYSFILE_DIR}" -type f -print0 | xargs -0r rm -f

# Create the users authorized_keys files.
xmlstarlet sel -t \
  -m "//system/usermanagement/users/user" \
	-v uuid \
	-i "position() != last()" -n -b \
  -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc |
  while read uuid; do
	  name=$(esb_config_get "//system/usermanagement/users/user[uuid='${uuid}']/name")
	  filename="${ESB_SSHD_AUTHORIZEDKEYSFILE_DIR}/${name}"
	  index=$(esb_config_get_count "//system/usermanagement/users/user[uuid='${uuid}']/sshpubkeys/sshpubkey")
	  touch "${filename}"
	  chmod ${ESB_SSHD_AUTHORIZEDKEYSFILE_MASK} "${filename}"
	  chown "${name}" "${filename}"
	  while [ ${index} -gt 0 ]; do
		  xmlstarlet sel -t -m "//system/usermanagement/users/user[uuid='${uuid}']/sshpubkeys" \
			-v "sshpubkey[position()=${index}]" \
			${ESB_CONFIG_FILE} | xmlstarlet unesc >"${filename}.tmp"
		  ssh-keygen -i -f "${filename}.tmp" >>"${filename}"
		  rm -f "${filename}.tmp"
		  index=$(( ${index} - 1 ))
	  done
  done
