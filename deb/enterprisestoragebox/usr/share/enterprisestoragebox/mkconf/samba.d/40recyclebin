#!/bin/sh
#
# This file is part of EnterpriSestorageBox.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author   Artur Osinski-Stachowicz <artio0610@gmail.com>
# @copyright Copyright (c) 2009-2015 Artur Osinski-Stachowicz
#
# EnterpriSestorageBox is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# EnterpriSestorageBox is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with EnterpriSestorageBox. If not, see <http://www.gnu.org/licenses/>.

# Documentation/Howto:
# http://www.samba.org/samba/docs/man/Samba-HOWTO-Collection/VFS.html#id2651247
# http://www.redhat.com/advice/tips/sambatrash.html

set -e

. /etc/default/enterprisestoragebox
. /usr/share/enterprisestoragebox/scripts/helper-functions

ESB_SAMBA_SHARE_RECYCLE_REPOSITORY=${ESB_SAMBA_SHARE_RECYCLE_REPOSITORY:-".recycle"}
ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT=${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT:-"/etc/cron.daily/enterprisestoragebox-samba-recycle"}
ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_MASK=${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_MASK:-"755"}
ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_TEMPLATE=${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_TEMPLATE:-"samba-recycle-"}

# Create the rsync cron jobs. Each job is configured in a seperate script.
mkdir -p ${ESB_CRONSCRIPTS_DIR}
rm -f ${ESB_CRONSCRIPTS_DIR}/${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_TEMPLATE}*

[ "$(esb_config_get "//services/smb/enable")" = "0" ] && exit 0

# Create the script that purges the shared folder recylce bin.
xmlstarlet sel -t -m "//services/smb/shares/share[recyclebin='1']" \
  -v "concat(uuid,' ',sharedfolderref,' ',recyclemaxage)" \
  -i "position() != last()" -n -b \
  ${ESB_CONFIG_FILE} | xmlstarlet unesc |
  while read uuid sharedfolderref recyclemaxage; do
	  # Skip shared folders with recyclemaxage=0.
	  [ "${recyclemaxage}" -eq "0" ] && continue

	  filename="${ESB_CRONSCRIPTS_DIR}/${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_TEMPLATE}${uuid}"
	  runfile="/var/run/${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_TEMPLATE}${uuid}"
	  sfpath=$(esb_get_sharedfolder_path "${sharedfolderref}")
	  recyclerepository="${sfpath}/${ESB_SAMBA_SHARE_RECYCLE_REPOSITORY}"
	  amin=$(expr ${recyclemaxage} \* 24 \* 60)

	  cat <<EOF > ${filename}
#!/bin/sh
# This configuration file is auto-generated.
# WARNING: Do not edit this file, your changes will be lost.
amin=${amin}
while getopts 'f' option
do
	case \${option} in
	f) amin=1;; # Force deletion
	esac
done
[ -e ${runfile} ] && exit 1
trap "rm -f ${runfile}; exit" 0 1 2 5 15
touch ${runfile}
[ ! -e "${recyclerepository}" ] && exit 1
echo "Please wait, empty recyle bin of <$sfpath> ..."
find "${recyclerepository}" -mindepth 1 -amin +\${amin} -print0 | xargs -0r rm -rfv
# Do a second run to remove empty directories.
find "${recyclerepository}" -mindepth 1 -type d -empty -print0 | xargs -0r rm -rfv
EOF
	  chmod ${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_MASK} ${filename}
  done

# Create the cron script itself.
cat <<EOF > ${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT}
#!/bin/sh
# This configuration file is auto-generated.
# WARNING: Do not edit this file, your changes will be lost.
set -e
run-parts --regex='${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT_TEMPLATE}*' ${ESB_CRONSCRIPTS_DIR} &>/dev/null
EOF
chmod 755 ${ESB_SAMBA_SHARE_RECYCLE_CRONSCRIPT}
